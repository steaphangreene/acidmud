// *************************************************************************
//  This file is part of AcidMUD by Steaphan Greene
//
//  Copyright 1999-2022 Steaphan Greene <steaphan@gmail.com>
//
//  AcidMUD is free software; you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation; either version 3 of the License, or
//  (at your option) any later version.
//
//  AcidMUD is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with AcidMUD (see the file named "COPYING");
//  If not, see <http://www.gnu.org/licenses/>.
//
// *************************************************************************

#include <algorithm>
#include <array>
#include <string>
#include <vector>

#include "color.hpp"
#include "utils.hpp"

constexpr std::array<const char*, 541> skill_names = {{
    "Accomplishment",
    "Accuracy Bonus",
    "Accuracy Penalty",
    "Acrobatics",
    "Acting",
    "Activate Juju",
    "Air Pistols",
    "Air Rifles",
    "Air Weaving",
    "Alchemy",
    "Alcohol",
    "Amphibious Combat",
    "Archery",
    "Arctic Waraxe Martial Art",
    "Armoring",
    "Art",
    "Artificing",
    "Artificing, Star",
    "Assault Cannons",
    "Assault Rifles",
    "Athletic Skills",
    "Attribute Points",
    "Ballista",
    "Ballistic",
    "Bang",
    "Bike",
    "Blacksmithing",
    "Blessed",
    "Blind Spell",
    "Blowgun",
    "Boat, Powered",
    "Boat, Row",
    "Boat, Sail",
    "Body-Based Skills",
    "Body",
    "Body Checking",
    "Bored",
    "Bowyer",
    "Breath Weapon",
    "Brightness",
    "Buggy",
    "Build/Repair Skills",
    "Bulk",
    "Burn",
    "Cannon",
    "Capacity",
    "Car",
    "Carpentry",
    "Carromeleg - Tier I",
    "Carromeleg - Tier II",
    "Carromeleg - Tier III",
    "Carromeleg - Tier IV",
    "Carromeleg - Tier V",
    "Carromeleg - Tier VI",
    "Cart",
    "Catching",
    "Centering",
    "Charisma-Based Skills",
    "Charisma",
    "Chill",
    "Clear Weather Spell",
    "Climbing",
    "Closeable",
    "Clothier",
    "Combat Environment Skills",
    "Communications",
    "Computer Build/Repair",
    "Computer",
    "Computer Targeting",
    "Concuss",
    "Conjuring",
    "Container",
    "Copy Book Spell",
    "Coverage",
    "Create Food",
    "Create Food Spell",
    "Create Water Spell",
    "Create Zombie Spell",
    "Creation Skills",
    "Crossbow",
    "Cure Blindness Spell",
    "Cure Poison",
    "Cure Poison Spell",
    "Cursed",
    "Cyber Data Manipulation",
    "Cyberpunk Skills",
    "Cyber Skills",
    "Cyber Vehicle Operation",
    "Cycling",
    "Damage Bonus",
    "Damage Control",
    "Damage Penalty",
    "Damage Resistance",
    "Darkness Spell",
    "Dark Vision",
    "Dark Vision Spell",
    "Day Length",
    "Day Time",
    "Defense Range",
    "Def Range",
    "Dehydrate Effect",
    "Demolitions",
    "Detect Cursed Items Spell",
    "Detect Poison Spell",
    "Diplomacy",
    "Dishonor",
    "Distance",
    "Distract Spell",
    "Diving",
    "Dodge",
    "Drink",
    "Drone Piloting Skills",
    "Durability",
    "DynamicInit",
    "Earthquake Spell",
    "Earth Weaving",
    "Electrical Build/Repair",
    "Electronics",
    "Elven Martial Arts Skills",
    "Enchanting",
    "Encumbrance Bonus",
    "Encumbrance Penalty",
    "Endurance",
    "Energize Spell",
    "Engineering",
    "Enterable",
    "Etiquette",
    "Evasion Bonus",
    "Evasion",
    "Evasion Penalty",
    "Expert Skills",
    "Finance",
    "Find Juju",
    "Fireball Spell",
    "Fire Burst Spell",
    "Fire Dart Spell",
    "Fire Weaving",
    "First Aid",
    "Fixed-Wing Craft",
    "Fixed-Wing Drone",
    "Flash",
    "Fletcher",
    "Flexibility",
    "Flight",
    "Float Spell",
    "Fly Spell",
    "Focusing",
    "Food",
    "Force Arrow Spell",
    "Force Sword",
    "Force Sword Spell",
    "FP Skills",
    "Grappling",
    "Group Resilience Spell",
    "Gunnery",
    "Half-Track",
    "Hand-to-Hand Combat Skills",
    "Hardness",
    "Harm Spell",
    "Hazardous",
    "Heal Effect",
    "Heal Group Spell",
    "Healing",
    "Heal Spell",
    "Heat Vision",
    "Heat Vision Spell",
    "Heavy Firearm Skills",
    "Heavy Lasers",
    "Heavy Projectors",
    "Heavy Rifles",
    "Helmsman, Star",
    "Hidden",
    "High-G Combat",
    "High-G Ops",
    "Hits",
    "Hit Weight",
    "Honor",
    "Hovercraft",
    "Hover Drone",
    "Hungry",
    "Hurling",
    "Identify Character Spell",
    "Identify",
    "Identify Juju",
    "Identify Person Spell",
    "Identify Spell",
    "Influence Spell",
    "Ingestible",
    "Injure Spell",
    "Insulate",
    "Intelligence-Based Skills",
    "Intelligence",
    "Interrogation",
    "Intimidation",
    "Invisibility Spell",
    "Invisible",
    "Irradiate",
    "Jumping",
    "Key",
    "Kicking",
    "Knowledge",
    "Laser Pistols",
    "Laser Rifles",
    "Lasso",
    "Launch Weapons",
    "Leadership",
    "Leatherworking",
    "Leverage",
    "Lifting",
    "Lightable",
    "Lightning Bolt Spell",
    "Light Source",
    "Light Spell",
    "Liquid Container",
    "Liquid",
    "Liquid Source",
    "Locate Object Spell",
    "Lockable",
    "Locked",
    "Lock",
    "Long Blades",
    "Long Cleaves",
    "Long Crushing",
    "Long Flails",
    "Long Piercing",
    "Long Staves",
    "Lost Martial Arts",
    "Low-G Combat",
    "Low-G Ops",
    "Luck Spell",
    "Lumberjack",
    "Machine Guns",
    "Machine Pistols",
    "Magical Charges",
    "Magical",
    "Magical Scroll",
    "Magical Skills",
    "Magical Spell",
    "Magical Staff",
    "Magical Wand",
    "Magic Dead",
    "Magic Force Bonus",
    "Magic Force Penalty",
    "Magic Manipulation",
    "Magic Resistance",
    "Magic Vulnerability",
    "Martial Arts, Elven",
    "Martial Arts Skills",
    "Masonry",
    "Mature Trees",
    "Max Gap",
    "Mechanical Build/Repair",
    "Mechanics",
    "Medieval Skills",
    "Melee-Combat Skills",
    "Metalworking",
    "Mindcasting",
    "Min Gap",
    "Misfortune Spell",
    "Modern Skills",
    "Money",
    "Mounted Air Pistols",
    "Mounted Archery",
    "Mounted Blades",
    "Mounted Blowgun",
    "Mounted Cleaves",
    "Mounted Crossbow",
    "Mounted Crushing",
    "Mounted Flails",
    "Mounted Hurling",
    "Mounted Laser Pistols",
    "Mounted Machine Pistols",
    "Mounted Melee-Combat Skills",
    "Mounted Nets",
    "Mounted Piercing",
    "Mounted Pistol Skills",
    "Mounted Pistols",
    "Mounted Plasma Pistols",
    "Mounted Ranged-Combat Skills",
    "Mounted Shot Pistols",
    "Mounted Slings",
    "Mounted SMGs",
    "Mounted Throwing, Aero",
    "Mounted Throwing, Non-Aero",
    "Mounted Whips",
    "Muffle",
    "Multiple",
    "NaturalWeapon",
    "Nature Skills",
    "Navigation",
    "Needy",
    "Negotiation",
    "Nets",
    "Neural Interface",
    "Noise Source",
    "None",
    "Obvious",
    "Offhand Air Pistols",
    "Offhand Blades",
    "Offhand Cleaves",
    "Offhand Crossbow",
    "Offhand Crushing",
    "Offhand Flails",
    "Offhand Hurling",
    "Offhand Laser Pistols",
    "Offhand Machine Pistols",
    "Offhand Piercing",
    "Offhand Pistols",
    "Offhand Plasma Pistols",
    "Offhand Punching",
    "Offhand Shot Pistols",
    "Offhand SMGs",
    "Offhand Staves",
    "Offhand Throwing, Aero",
    "Offhand Throwing, Non-Aero",
    "Offhand Whips",
    "Open",
    "Padding",
    "Peaceful",
    "Pen. Dist",
    "Pen. Ratio",
    "Pen. Width",
    "Perception",
    "Performance",
    "Perishable",
    "Personality",
    "Personal Shield Spell",
    "Pickable",
    "Piloting Skills",
    "Pistol Skills",
    "Pistols",
    "Plasma Cannons",
    "Plasma Pistols",
    "Plasma Rifles",
    "Poisionous",
    "Poisoned",
    "Poisonous",
    "Power Distribution",
    "Power Suit",
    "Prepared Basic",
    "Prepared Intermediate",
    "Prepared Primary",
    "Prepared Simple",
    "Priceless",
    "Protection Spell",
    "Punching",
    "Quantity",
    "Quickdraw",
    "Quickness-Based Skills",
    "Quickness",
    "Race Car",
    "Ranged-Combat Skills",
    "Range",
    "Ratio",
    "Reach",
    "Reaction-Based Skills",
    "Reaction",
    "Recall Group Spell",
    "Recall",
    "Recall Spell",
    "Refine Juju",
    "Reflect",
    "Remove Curse",
    "Remove Curse Spell",
    "Research",
    "Resilience",
    "Resilience Bonus",
    "Resilience Penalty",
    "Resilience Spell",
    "Restricted Item",
    "Resurrect",
    "Resurrect Spell",
    "Riding",
    "Rifle Skills",
    "Rifles",
    "Ritual Conjuring",
    "Ritual Spellcasting",
    "Rod Targeting",
    "Rotorcraft",
    "Rotor Drone",
    "Rot",
    "Running",
    "Saurian Line Attacking",
    "Sci-Fi Skills",
    "Security",
    "Seduction",
    "Self Artificing",
    "Sell Profit",
    "Sensors",
    "Shade",
    "Shadowrun Skills",
    "Shamanistic Skills",
    "Sharpness",
    "Shielding",
    "Shields",
    "Ship, Powered",
    "Ship",
    "Shipwright",
    "Short Blades",
    "Short Cleaves",
    "Short Crushing",
    "Short Flails",
    "Short Piercing",
    "Short Staves",
    "Shotguns",
    "Shot Pistols",
    "Skiing",
    "Skill-Based Skills",
    "Skill Points",
    "Skills",
    "Sled",
    "Sleep Other",
    "Sleep Other Spell",
    "Sleepy",
    "Slings",
    "Smelting",
    "SMGs",
    "Snowmobile",
    "Social Skills",
    "Soundproof",
    "Spacecraft",
    "Spark Spell",
    "Specialized Skills",
    "Specialty Skills",
    "Spellcasting",
    "Spellcraft",
    "Spellcraft, Star",
    "Spell Preparation",
    "Spell Targeting",
    "Sprinting",
    "Staff Slings",
    "Staff Targeting",
    "Star Magical Skills",
    "Star Martial Arts",
    "Status Points",
    "Stealth",
    "Strength-Based Skills",
    "Strength Required",
    "Strength Spell",
    "Strength",
    "Str Req",
    "Style",
    "Summon Creature Spell",
    "Surgery",
    "Survival",
    "Swimming",
    "Swordsmithing",
    "Tactics",
    "Talismongery",
    "TBAAction",
    "TBAAffection",
    "TBAAttack",
    "TBADefense",
    "TBAGold",
    "TBAMOB",
    "TBAObject",
    "TBAPopper",
    "TBARoom",
    "TBAScriptNArg",
    "TBAScript",
    "TBAScriptType",
    "TBAZone",
    "Teamster",
    "Technical Skills",
    "Teleport Spell",
    "Teleport",
    "Temporary",
    "Thickness",
    "Thirsty",
    "Throwing, Aero",
    "Throwing, Non-Aero",
    "Tired",
    "Tracked Drone",
    "Tracked Vehicle",
    "Tracking",
    "Tractor",
    "Translate Spell",
    "Translucent",
    "Transparent",
    "Treatment Spell",
    "Treatment",
    "Trike",
    "Two-Handed Blades",
    "Two-Handed Cleaves",
    "Two-Handed Crushing",
    "Two-Handed Flails",
    "Two-Handed Piercing",
    "Two-Handed Staves",
    "Underwater Combat",
    "Vectored Thrust Drone",
    "Vectored Thrust",
    "Vehicle",
    "Velocity",
    "Verbal Interface",
    "Vortex",
    "Wand Targeting",
    "Warm",
    "WaterDepth",
    "Water Weaving",
    "Weaken Subject Spell",
    "WeaponDamage",
    "WeaponForce",
    "WeaponReach",
    "WeaponSeverity",
    "Weapon System Skills",
    "WeaponType",
    "Wearable on Back",
    "Wearable on Chest",
    "Wearable on Collar",
    "Wearable on Face",
    "Wearable on Head",
    "Wearable on Left Arm",
    "Wearable on Left Finger",
    "Wearable on Left Foot",
    "Wearable on Left Hand",
    "Wearable on Left Hip",
    "Wearable on Left Leg",
    "Wearable on Left Shoulder",
    "Wearable on Left Wrist",
    "Wearable on Neck",
    "Wearable on Right Arm",
    "Wearable on Right Finger",
    "Wearable on Right Foot",
    "Wearable on Right Hand",
    "Wearable on Right Hip",
    "Wearable on Right Leg",
    "Wearable on Right Shoulder",
    "Wearable on Right Wrist",
    "Wearable on Shield",
    "Wearable on Waist",
    "Wheeled Drone",
    "Whips",
    "Width",
    "Willpower-Based Skills",
    "Willpower",
    "Woodworking",
    "Youth Bonus",
    "Youth Penalty",
    "Zap",
    "Zero-G Combat",
    "Zero-G Ops",
}};
template <size_t L>
constexpr std::array<uint32_t, L> names2crcs(std::array<const char*, L> in) {
  std::array<uint32_t, L> ret;
  std::transform(in.begin(), in.end(), ret.begin(), [](auto&& x) {
    return crc32c_c(x, 0xFFFFFFFFU, 0) ^ 0xFFFFFFFFU;
  });
  std::sort(ret.begin(), ret.end());
  return ret;
};
constexpr auto skill_crcs = names2crcs(skill_names);
static_assert(skill_names[0][0] == 'A');
static_assert(skill_crcs[0] == crc32c("Warm"));

// Generate initial skills definitions pair vector automatically from known skills list.
template <size_t L>
constexpr std::array<std::pair<uint32_t, std::string>, L> names2entry(
    std::array<const char*, L> in) {
  std::array<std::pair<uint32_t, std::string>, L> ret;
  std::transform(in.begin(), in.end(), ret.begin(), [](auto&& x) {
    return std::make_pair(crc32c_c(x, 0xFFFFFFFFU, 0) ^ 0xFFFFFFFFU, x);
  });
  std::sort(ret.begin(), ret.end());
  return ret;
};
static const auto skill_defs_array = names2entry(skill_names);
static std::vector<std::pair<uint32_t, std::string>> skill_defs(
    skill_defs_array.begin(),
    skill_defs_array.end());

void save_skill_names_to(FILE* fl) {
  std::sort(skill_defs.begin(), skill_defs.end());
  skill_defs.erase(std::unique(skill_defs.begin(), skill_defs.end()), skill_defs.end());
  fprintf(fl, "%lu\n", skill_defs.size());
  for (auto skn : skill_defs) {
    if (skn.second.length() > 255) {
      fprintf(stderr, CRED "Error: Skill name too long: '%s'\n", skn.second.c_str());
      fprintf(fl, "%.8X:Undefined\n", skn.first);
    } else {
      fprintf(fl, "%.8X:%s\n", skn.first, skn.second.c_str());
    }
  }
}

void load_skill_names_from(FILE* fl) {
  int32_t size;
  fscanf(fl, "%d\n", &size);
  char buf[256];
  skill_defs.reserve(skill_defs.size() + size);
  for (int sk = 0; sk < size; ++sk) {
    uint32_t hash;
    fscanf(fl, "%X:%255[^\n]\n", &hash, buf);
    skill_defs.emplace_back(std::make_pair(hash, buf));
  }
  std::sort(skill_defs.begin(), skill_defs.end());
  skill_defs.erase(std::unique(skill_defs.begin(), skill_defs.end()), skill_defs.end());
}

void purge_invalid_skill_names() {
  for (auto& sk : skill_defs) {
    sk.first = crc32c(sk.second);
  }
  std::sort(skill_defs.begin(), skill_defs.end());
  skill_defs.erase(std::unique(skill_defs.begin(), skill_defs.end()), skill_defs.end());
}

void confirm_skill_hash(uint32_t stok) {
  auto itn = skill_defs.begin();
  for (; itn != skill_defs.end() && itn->first != stok; ++itn) {
  }
  if (itn == skill_defs.end()) {
    fprintf(stderr, CRED "Error: bogus skill hash (x%X)\n" CNRM, stok);
    skill_defs.emplace_back(std::make_pair(stok, "Unknown"));
  }
}
void insert_skill_hash(uint32_t stok, const std::string& s) {
  auto itn = skill_defs.begin();
  for (; itn != skill_defs.end() && itn->first != stok; ++itn) {
  }
  if (itn == skill_defs.end()) {
    skill_defs.emplace_back(std::make_pair(stok, s));
  }
}

std::string SkillName(uint32_t sktok) {
  std::string name = "Undefined";
  for (auto n : skill_defs) {
    if (n.first == sktok) {
      name = n.second;
    }
  }
  return name;
}
